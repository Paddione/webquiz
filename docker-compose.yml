services:
  quiz-app:
    build: . # Tells Docker Compose to build the image from the Dockerfile in the current directory
    container_name: multiplayer_quiz_app
    ports:
      - "4000:3000" # Map port 4000 on the host to port 3000 in the container (where Node server runs)
    volumes:
      # You can mount the questions.json file to easily update questions without rebuilding the image
      # Make sure 'questions.json' is in the same directory as your docker-compose.yml or provide the correct path
      - ./questions.json:/usr/src/app/questions.json:ro # ro for read-only
      # For development, you might want to mount your source code for live updates,
      # but for "production-like" build, copying files in Dockerfile is better.
      # - ./public:/usr/src/app/public
      # - ./server.js:/usr/src/app/server.js
    restart: unless-stopped
    environment:
      - NODE_ENV=production # Example environment variable
    networks:
      - npm_network

# Add this at the top level of your docker-compose.yml
networks:
  npm_network:
    external: true